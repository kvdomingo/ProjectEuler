"""
Even Fibonacci numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""
from timeit import timeit


def main(upper_bound: int = 4e6):
    suma, n1, n2 = 0, 1, 1
    while n1 < upper_bound:
        n1, n2 = n2, n1 + n2
        if n1%2 == 0:
            suma += n1
    return suma


if __name__ == "__main__":
    reps = 1000
    print(main())
    print(f"{round(timeit(main, number=reps) / reps * 1e6, 2)} Âµsec per loop")
